"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[416],{9801:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>o});var s=n(4848),r=n(8453);const c={id:"getting-started",title:"Getting Started",slug:"/"},a=void 0,i={id:"getting-started",title:"Getting Started",description:"The Jest Roblox API is similar to the API used by JavaScript Jest.",source:"@site/docs/GettingStarted.md",sourceDirName:".",slug:"/",permalink:"/jest-lua/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"getting-started",title:"Getting Started",slug:"/"},sidebar:"docs",next:{title:"Using Matchers",permalink:"/jest-lua/using-matchers"}},l={},o=[];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["The Jest Roblox API is similar to ",(0,s.jsx)(t.a,{href:"https://jest-archive-august-2023.netlify.app/docs/27.x/api",children:"the API used by JavaScript Jest."})]}),"\n",(0,s.jsxs)(t.p,{children:["Jest Lua currently requires ",(0,s.jsx)(t.a,{href:"https://github.com/rojo-rbx/run-in-roblox",children:(0,s.jsx)(t.code,{children:"run-in-roblox"})})," to run from the command line. It can also be run directly inside of Roblox Studio. See issue ",(0,s.jsx)(t.a,{href:"https://github.com/jsdotlua/jest-lua/issues/2",children:"#2"})," for more."]}),"\n",(0,s.jsxs)(t.p,{children:["Add the ",(0,s.jsx)(t.code,{children:"JestGlobals"})," and ",(0,s.jsx)(t.code,{children:"Jest"})," packages to your ",(0,s.jsx)(t.code,{children:"dev-dependencies"})," in your ",(0,s.jsx)(t.code,{children:"wally.toml"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="wally.toml"',children:'[dev-dependencies]\nJest = "jsdotlua/jest@3.6.1-rc.2"\nJestGlobals = "jsdotlua/jest-globals@3.6.1-rc.2"\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Run ",(0,s.jsx)(t.code,{children:"wally install"})," to install Jest Lua."]}),"\n",(0,s.jsxs)(t.p,{children:["Create a ",(0,s.jsx)(t.code,{children:"default.project.json"})," to set up your project structure and include the ",(0,s.jsx)(t.code,{children:"Packages"})," directory created by ",(0,s.jsx)(t.code,{children:"wally"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",metastring:'title="default.project.json"',children:'{\n\t"name": "YourProject",\n\t"tree": {\n\t\t"$className": "Folder",\n\t\t"Packages": {\n\t\t\t"$path": "Packages",\n\t\t\t"Project": {\n\t\t\t\t"$path": "src"\n\t\t\t}\n\t\t}\n\t}\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Create a ",(0,s.jsx)(t.code,{children:"run-tests.lua"})," to point the test runner to the correct directory with your tests. This is the entrypoint for Jest Lua. For more information, see ",(0,s.jsx)(t.a,{href:"cli",children:"runCLI Options"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",metastring:'title="run-tests.lua"',children:'local ReplicatedStorage = game:GetService("ReplicatedStorage")\n\nlocal runCLI = require("@DevPackages/Jest").runCLI\n\nlocal processServiceExists, ProcessService = pcall(function()\n\treturn game:GetService("ProcessService")\nend)\n\nlocal status, result = runCLI(ReplicatedStorage.Packages.Project, {\n\tverbose = false,\n\tci = false\n}, { ReplicatedStorage.Packages.Project }):awaitStatus()\n\nif status == "Rejected" then\n\tprint(result)\nend\n\nif status == "Resolved" and result.results.numFailedTestSuites == 0 and result.results.numFailedTests == 0 then\n\tif processServiceExists then\n\t\tProcessService:ExitAsync(0)\n\tend\nend\n\nif processServiceExists then\n\tProcessService:ExitAsync(1)\nend\n\nreturn nil\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Inside ",(0,s.jsx)(t.code,{children:"src"}),", create a basic ",(0,s.jsx)(t.a,{href:"configuration",children:"configuration"})," file."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",metastring:'title="jest.config.lua"',children:'return {\n\ttestMatch = { "**/*.spec" }\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Let's get started by writing a test for a hypothetical function that adds two numbers. First, create a ",(0,s.jsx)(t.code,{children:"sum.lua"})," under your ",(0,s.jsx)(t.code,{children:"src"})," directory."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",metastring:'title="sum.lua"',children:"return function(a, b)\n\treturn a + b\nend\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Then, create a ",(0,s.jsx)(t.code,{children:"__tests__"})," directory under your ",(0,s.jsx)(t.code,{children:"src"})," directory and create a ",(0,s.jsx)(t.code,{children:"sum.spec.lua"})," in it. This will contain our actual test:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",metastring:'title="sum.spec.lua"',children:'local JestGlobals = require("@DevPackages/JestGlobals")\n\nlocal it = JestGlobals.it\nlocal expect = JestGlobals.expect\n\nlocal sum = require("@Project/Sum")\n\nit(\'adds 1 + 2 to equal 3\', function()\n\texpect(sum(1, 2)).toBe(3)\nend)\n'})}),"\n",(0,s.jsx)(t.admonition,{type:"caution",children:(0,s.jsxs)(t.p,{children:["Any functionality needed ",(0,s.jsx)(t.em,{children:"must"})," be explicitly required from ",(0,s.jsx)(t.code,{children:"JestGlobals"}),", see ",(0,s.jsx)(t.a,{href:"api",children:"Globals"}),"."]})}),"\n",(0,s.jsxs)(t.p,{children:["Before you can run your tests, you need to enable the ",(0,s.jsx)(t.code,{children:"debug.loadmodule"})," API. To do this, you must enable the ",(0,s.jsx)(t.code,{children:"FFlagEnableLoadModule"})," flag. See issue ",(0,s.jsx)(t.a,{href:"https://github.com/jsdotlua/jest-lua/issues/3",children:"#3"})," for more."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",metastring:'title="ClientAppSettings.json"',children:'{\n\t"FFlagEnableLoadModule": true\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Finally, run your project using Roblox Studio or ",(0,s.jsx)(t.code,{children:"run-in-roblox"})," to run the tests and your tests should pass!"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"run-in-roblox --place test-place.rbxl --script scripts/run-tests.lua\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"You just successfully wrote your first test using Jest Lua!"})}),"\n",(0,s.jsxs)(t.p,{children:["This test used ",(0,s.jsx)(t.code,{children:"expect"})," and ",(0,s.jsx)(t.code,{children:"toBe"})," to test that two values were exactly identical. To learn about other things that Jest Lua can test, see ",(0,s.jsx)(t.a,{href:"using-matchers",children:"Using Matchers"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(6540);const r={},c=s.createContext(r);function a(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);