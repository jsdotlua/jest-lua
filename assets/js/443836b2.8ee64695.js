"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[457],{5616:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var n=s(4848),i=s(8453),a=s(4252);const l={id:"cli",title:"runCLI Options"},o=void 0,r={id:"cli",title:"runCLI Options",description:"The Jest packages exports runCLI, which is the main entrypoint to run Jest Lua tests. In your entrypoint script, import runCLI from the Jest package. A basic entrypoint script can look like the following:",source:"@site/docs/CLI.md",sourceDirName:".",slug:"/cli",permalink:"/jest-lua/cli",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"cli",title:"runCLI Options"},sidebar:"api",previous:{title:"Configuring Jest",permalink:"/jest-lua/configuration"}},c={},d=[{value:"Options",id:"options",level:2},{value:"Reference",id:"reference",level:2},{value:"<code>ci</code> [boolean]",id:"ci-boolean",level:3},{value:"<code>clearMocks</code> [boolean]",id:"clearmocks-boolean",level:3},{value:"<code>debug</code> [boolean]",id:"debug-boolean",level:3},{value:"<code>expand</code> [boolean]",id:"expand-boolean",level:3},{value:"<code>json</code> [boolean]",id:"json-boolean",level:3},{value:"<code>listTests</code> [boolean]",id:"listtests-boolean",level:3},{value:"<code>noStackTrace</code> [boolean]",id:"nostacktrace-boolean",level:3},{value:"<code>passWithNoTests</code> [boolean]",id:"passwithnotests-boolean",level:3},{value:"<code>resetMocks</code> [boolean]",id:"resetmocks-boolean",level:3},{value:"<code>showConfig</code> [boolean]",id:"showconfig-boolean",level:3},{value:"<code>testMatch</code> [array&lt;string&gt;]",id:"testmatch-arraystring",level:3},{value:"<code>testNamePattern</code> [regex]",id:"testnamepattern-regex",level:3},{value:"<code>testPathIgnorePatterns</code> [array&lt;regex&gt;]",id:"testpathignorepatterns-arrayregex",level:3},{value:"<code>testPathPattern</code> [regex]",id:"testpathpattern-regex",level:3},{value:"<code>testTimeout</code> [number&gt;]",id:"testtimeout-number",level:3},{value:"<code>updateSnapshot</code> [boolean]",id:"updatesnapshot-boolean",level:3},{value:"<code>verbose</code> [boolean]",id:"verbose-boolean",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("p",{children:(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})})}),"\n",(0,n.jsx)("img",{alt:"Deviation",src:"img/deviation.svg"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"Jest"})," packages exports ",(0,n.jsx)(t.code,{children:"runCLI"}),", which is the main entrypoint to run Jest Lua tests. In your entrypoint script, import ",(0,n.jsx)(t.code,{children:"runCLI"})," from the ",(0,n.jsx)(t.code,{children:"Jest"})," package. A basic entrypoint script can look like the following:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lua",metastring:'title="spec.lua"',children:'local Packages = script.Parent.YourProject.Packages\nlocal runCLI = require("@Packages/Jest").runCLI\n\nlocal processServiceExists, ProcessService = pcall(function()\n\treturn game:GetService("ProcessService")\nend)\n\nlocal status, result = runCLI(Packages.Project, {\n\tverbose = false,\n\tci = false\n}, { Packages.Project }):awaitStatus()\n\nif status == "Rejected" then\n\tprint(result)\nend\n\nif status == "Resolved" and result.results.numFailedTestSuites == 0 and result.results.numFailedTests == 0 then\n\tif processServiceExists then\n\t\tProcessService:ExitAsync(0)\n\tend\nend\n\nif processServiceExists then\n\tProcessService:ExitAsync(1)\nend\n\nreturn nil\n'})}),"\n",(0,n.jsxs)(t.p,{children:["The first argument to ",(0,n.jsx)(t.code,{children:"runCLI"})," is the root directory of your project, the second argument is a list of ",(0,n.jsx)(t.a,{href:"#options",children:"options"}),", and the third argument is a list of projects (directories with a ",(0,n.jsx)(t.code,{children:"jest.config.lua"}),") for Jest Lua to discover."]}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n","\n","\n",(0,n.jsx)(a.A,{toc:d.filter((e=>3===e.level))}),"\n",(0,n.jsx)(t.h2,{id:"reference",children:"Reference"}),"\n",(0,n.jsxs)(t.h3,{id:"ci-boolean",children:[(0,n.jsx)(t.code,{children:"ci"})," [boolean]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--ci",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsxs)(t.p,{children:["When this option is provided, Jest Lua will assume it is running in a CI environment. This changes the behavior when a new snapshot is encountered. Instead of the regular behavior of storing a new snapshot automatically, it will fail the test and require Jest Lua to be run with ",(0,n.jsx)(t.code,{children:"updateSnapshot"}),"."]}),"\n",(0,n.jsxs)(t.h3,{id:"clearmocks-boolean",children:[(0,n.jsx)(t.code,{children:"clearMocks"})," [boolean]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--clearmocks",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsxs)(t.p,{children:["Automatically clear mock calls, instances, contexts and results before every test. Equivalent to calling ",(0,n.jsx)(t.a,{href:"jest-object#jestclearallmocks",children:(0,n.jsx)(t.code,{children:"jest.clearAllMocks()"})})," before each test. This does not remove any mock implementation that may have been provided."]}),"\n",(0,n.jsxs)(t.h3,{id:"debug-boolean",children:[(0,n.jsx)(t.code,{children:"debug"})," [boolean]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--debug",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsx)(t.p,{children:"Print debugging info about your Jest config."}),"\n",(0,n.jsxs)(t.h3,{id:"expand-boolean",children:[(0,n.jsx)(t.code,{children:"expand"})," [boolean]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--expand",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsx)(t.p,{children:"Use this flag to show full diffs and errors instead of a patch."}),"\n",(0,n.jsxs)(t.h3,{id:"json-boolean",children:[(0,n.jsx)(t.code,{children:"json"})," [boolean]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--json",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsx)(t.p,{children:"Prints the test results in JSON. This mode will send all other test output and user messages to stderr."}),"\n",(0,n.jsxs)(t.h3,{id:"listtests-boolean",children:[(0,n.jsx)(t.code,{children:"listTests"})," [boolean]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--listtests",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsx)(t.p,{children:"Lists all test files that Jest Lua will run given the arguments, and exits."}),"\n",(0,n.jsxs)(t.h3,{id:"nostacktrace-boolean",children:[(0,n.jsx)(t.code,{children:"noStackTrace"})," [boolean]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--nostacktrace",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsx)(t.p,{children:"Disables stack trace in test results output."}),"\n",(0,n.jsxs)(t.h3,{id:"passwithnotests-boolean",children:[(0,n.jsx)(t.code,{children:"passWithNoTests"})," [boolean]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--passwithnotests",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsx)(t.p,{children:"Allows the test suite to pass when no files are found."}),"\n",(0,n.jsxs)(t.h3,{id:"resetmocks-boolean",children:[(0,n.jsx)(t.code,{children:"resetMocks"})," [boolean]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--resetmocks",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsxs)(t.p,{children:["Automatically reset mock state before every test. Equivalent to calling ",(0,n.jsx)(t.a,{href:"jest-object#jestresetallmocks",children:(0,n.jsx)(t.code,{children:"jest.resetAllMocks()"})})," before each test. This will lead to any mocks having their fake implementations removed but does not restore their initial implementation."]}),"\n",(0,n.jsxs)(t.h3,{id:"showconfig-boolean",children:[(0,n.jsx)(t.code,{children:"showConfig"})," [boolean]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--showconfig",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsx)(t.p,{children:"Print your Jest config and then exits."}),"\n",(0,n.jsxs)(t.h3,{id:"testmatch-arraystring",children:[(0,n.jsx)(t.code,{children:"testMatch"})," [array<string>]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--testmatch-glob1--globn",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"API change",src:"img/apichange.svg"}),"\n",(0,n.jsxs)(t.p,{children:["The glob patterns Jest uses to detect test files. Please refer to the ",(0,n.jsxs)(t.a,{href:"configuration#testmatch-arraystring",children:[(0,n.jsx)(t.code,{children:"testMatch"})," configuration"]})," for details."]}),"\n",(0,n.jsxs)(t.h3,{id:"testnamepattern-regex",children:[(0,n.jsx)(t.code,{children:"testNamePattern"})," [regex]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--testnamepatternregex",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsxs)(t.p,{children:['Run only tests with a name that matches the regex. For example, suppose you want to run only tests related to authorization which will have names like "GET /api/posts with auth", then you can use ',(0,n.jsx)(t.code,{children:'testNamePattern = "auth"'}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsx)(t.p,{children:"The regex is matched against the full name, which is a combination of the test name and all its surrounding describe blocks."})}),"\n",(0,n.jsxs)(t.h3,{id:"testpathignorepatterns-arrayregex",children:[(0,n.jsx)(t.code,{children:"testPathIgnorePatterns"})," [array<regex>]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--testpathignorepatternsregexarray",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"API change",src:"img/apichange.svg"}),"\n",(0,n.jsxs)(t.p,{children:["An array of regexp pattern strings that are tested against all tests paths before executing the test. Contrary to ",(0,n.jsx)(t.code,{children:"testPathPattern"}),", it will only run those tests with a path that does not match with the provided regexp expressions."]}),"\n",(0,n.jsxs)(t.h3,{id:"testpathpattern-regex",children:[(0,n.jsx)(t.code,{children:"testPathPattern"})," [regex]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--testpathpatternregex",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsx)(t.p,{children:"A regexp pattern string that is matched against all tests paths before executing the test."}),"\n",(0,n.jsxs)(t.h3,{id:"testtimeout-number",children:[(0,n.jsx)(t.code,{children:"testTimeout"})," [number>]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--testtimeoutnumber",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsx)(t.p,{children:"Default timeout of a test in milliseconds. Default value: 5000."}),"\n",(0,n.jsxs)(t.h3,{id:"updatesnapshot-boolean",children:[(0,n.jsx)(t.code,{children:"updateSnapshot"})," [boolean]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--updatesnapshot",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsxs)(t.p,{children:["Use this flag to re-record every snapshot that fails during this test run. Can be used together with a test suite pattern or with ",(0,n.jsx)(t.code,{children:"testNamePattern"})," to re-record snapshots."]}),"\n",(0,n.jsxs)(t.h3,{id:"verbose-boolean",children:[(0,n.jsx)(t.code,{children:"verbose"})," [boolean]"]}),"\n",(0,n.jsx)("a",{href:"https://jestjs.io/docs/27.x/cli#--verbose",target:"_blank",children:(0,n.jsx)("img",{alt:"Jest",src:"img/jestjs.svg"})}),"\n",(0,n.jsx)("img",{alt:"Aligned",src:"img/aligned.svg"}),"\n",(0,n.jsx)(t.p,{children:"Display individual test results with the test suite hierarchy."})]})}function g(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},4252:(e,t,s)=>{s.d(t,{A:()=>l});s(6540);var n=s(5195);const i={tableOfContentsInline:"tableOfContentsInline_prmo"};var a=s(4848);function l(e){let{toc:t,minHeadingLevel:s,maxHeadingLevel:l}=e;return(0,a.jsx)("div",{className:i.tableOfContentsInline,children:(0,a.jsx)(n.A,{toc:t,minHeadingLevel:s,maxHeadingLevel:l,className:"table-of-contents",linkClassName:null})})}},5195:(e,t,s)=>{s.d(t,{A:()=>m});var n=s(6540),i=s(6342);function a(e){const t=e.map((e=>({...e,parentIndex:-1,children:[]}))),s=Array(7).fill(-1);t.forEach(((e,t)=>{const n=s.slice(2,e.level);e.parentIndex=Math.max(...n),s[e.level]=t}));const n=[];return t.forEach((e=>{const{parentIndex:s,...i}=e;s>=0?t[s].children.push(i):n.push(i)})),n}function l(e){let{toc:t,minHeadingLevel:s,maxHeadingLevel:n}=e;return t.flatMap((e=>{const t=l({toc:e.children,minHeadingLevel:s,maxHeadingLevel:n});return function(e){return e.level>=s&&e.level<=n}(e)?[{...e,children:t}]:t}))}function o(e){const t=e.getBoundingClientRect();return t.top===t.bottom?o(e.parentNode):t}function r(e,t){let{anchorTopOffset:s}=t;const n=e.find((e=>o(e).top>=s));if(n){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(o(n))?n:e[e.indexOf(n)-1]??null}return e[e.length-1]??null}function c(){const e=(0,n.useRef)(0),{navbar:{hideOnScroll:t}}=(0,i.p)();return(0,n.useEffect)((()=>{e.current=t?0:document.querySelector(".navbar").clientHeight}),[t]),e}function d(e){const t=(0,n.useRef)(void 0),s=c();(0,n.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:n,linkActiveClassName:i,minHeadingLevel:a,maxHeadingLevel:l}=e;function o(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(n),o=function(e){let{minHeadingLevel:t,maxHeadingLevel:s}=e;const n=[];for(let i=t;i<=s;i+=1)n.push(`h${i}.anchor`);return Array.from(document.querySelectorAll(n.join()))}({minHeadingLevel:a,maxHeadingLevel:l}),c=r(o,{anchorTopOffset:s.current}),d=e.find((e=>c&&c.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,s){s?(t.current&&t.current!==e&&t.current.classList.remove(i),e.classList.add(i),t.current=e):e.classList.remove(i)}(e,e===d)}))}return document.addEventListener("scroll",o),document.addEventListener("resize",o),o(),()=>{document.removeEventListener("scroll",o),document.removeEventListener("resize",o)}}),[e,s])}var h=s(8774),g=s(4848);function u(e){let{toc:t,className:s,linkClassName:n,isChild:i}=e;return t.length?(0,g.jsx)("ul",{className:i?void 0:s,children:t.map((e=>(0,g.jsxs)("li",{children:[(0,g.jsx)(h.A,{to:`#${e.id}`,className:n??void 0,dangerouslySetInnerHTML:{__html:e.value}}),(0,g.jsx)(u,{isChild:!0,toc:e.children,className:s,linkClassName:n})]},e.id)))}):null}const j=n.memo(u);function m(e){let{toc:t,className:s="table-of-contents table-of-contents__left-border",linkClassName:o="table-of-contents__link",linkActiveClassName:r,minHeadingLevel:c,maxHeadingLevel:h,...u}=e;const m=(0,i.p)(),x=c??m.tableOfContents.minHeadingLevel,p=h??m.tableOfContents.maxHeadingLevel,v=function(e){let{toc:t,minHeadingLevel:s,maxHeadingLevel:i}=e;return(0,n.useMemo)((()=>l({toc:a(t),minHeadingLevel:s,maxHeadingLevel:i})),[t,s,i])}({toc:t,minHeadingLevel:x,maxHeadingLevel:p});return d((0,n.useMemo)((()=>{if(o&&r)return{linkClassName:o,linkActiveClassName:r,minHeadingLevel:x,maxHeadingLevel:p}}),[o,r,x,p])),(0,g.jsx)(j,{toc:v,className:s,linkClassName:o,...u})}},8453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>o});var n=s(6540);const i={},a=n.createContext(i);function l(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);