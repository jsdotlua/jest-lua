"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[457],{4656:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var o=t(4848),i=t(8453);const l={id:"global-mocks",title:"Global Mocks"},a=void 0,s={id:"global-mocks",title:"Global Mocks",description:"It can be desirable to track how an implementation interacts with Luau globals.",source:"@site/docs/GlobalMocks.md",sourceDirName:".",slug:"/global-mocks",permalink:"/jest-lua/global-mocks",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"global-mocks",title:"Global Mocks"},sidebar:"docs",previous:{title:"Timer Mocks",permalink:"/jest-lua/timer-mocks"},next:{title:"Migrating from TestEZ",permalink:"/jest-lua/testez-migration"}},r={},c=[{value:"Mock a Global Function",id:"mock-a-global-function",level:2},{value:"Mocking Globals in Libraries",id:"mocking-globals-in-libraries",level:2},{value:"Use Original Implementation",id:"use-original-implementation",level:2}];function m(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("img",{alt:"Roblox only",src:"img/roblox-only.svg"}),"\n",(0,o.jsx)(n.p,{children:"It can be desirable to track how an implementation interacts with Luau globals.\nFor example, you might want to test that a certain message is printed to the\nconsole, or you might want to take control of the random number generator to get\na deterministic, predictable sequence of numbers."}),"\n",(0,o.jsx)(n.p,{children:"It isn't normally easy to mock these functions in the global Luau environment,\nbut Jest can replace their implementations for you, giving you a familiar\ninterface as if you're mocking any other regular function."}),"\n",(0,o.jsxs)(n.admonition,{type:"warning",children:[(0,o.jsx)(n.p,{children:"Jest Roblox does not support mocking all globals - only a few are whitelisted.\nIf you try to mock a global which is not whitelisted, you will see an error\nmessage that looks similar to this:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Jest does not yet support mocking the require global.\n"})}),(0,o.jsx)(n.p,{children:"Most notably, Jest Roblox does not support mocking these globals:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"game:GetService()"})," and other Instance methods (an API for this is being investigated)"]}),"\n",(0,o.jsxs)(n.li,{children:["the ",(0,o.jsx)(n.code,{children:"require()"})," function (use ",(0,o.jsx)(n.a,{href:"jest-object",children:(0,o.jsx)(n.code,{children:"jest.mock()"})})," instead)"]}),"\n",(0,o.jsxs)(n.li,{children:["task scheduling functions (use ",(0,o.jsx)(n.a,{href:"timer-mocks",children:"Timer Mocks"})," instead)"]}),"\n"]})]}),"\n",(0,o.jsx)(n.h2,{id:"mock-a-global-function",children:"Mock a Global Function"}),"\n",(0,o.jsxs)(n.p,{children:["In the following example, we mock the global ",(0,o.jsx)(n.code,{children:"print()"})," function so that our test\ncan see what's being printed. This is done as if you're spying on a table using\n",(0,o.jsx)(n.code,{children:"jest.spyOn()"}),", except you use ",(0,o.jsx)(n.code,{children:"jest.globalEnv"})," as the table."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="limerick.lua"',children:'return function()\n\tprint("There once was a print() in a test")\n\tprint("It would cause the maintainers unrest")\n\tprint("Printing all \'round the clock")\n\tprint("Beyond what they could mock")\n\tprint("Until globalEnv landed in Jest!")\nend\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="__tests__/limerick.spec.lua"',children:'local jest = JestGlobals.jest\n\ntest(\'mentions print() in the first line\', function()\n\tlocal limerick = require(Workspace.limerick)\n\n\tlocal mockPrint = jest.spyOn(jest.globalEnv, "print")\n\tmockPrint.mockImplementationOnce(function(firstLine: string, ...: string)\n\t\texpect(firstLine).toEqual(expect.stringContaining("print()"))\n\tend)\n\n\tlimerick()\nend)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"mocking-globals-in-libraries",children:"Mocking Globals in Libraries"}),"\n",(0,o.jsxs)(n.p,{children:["You can mock functions in libraries like ",(0,o.jsx)(n.code,{children:"math"})," by indexing into\n",(0,o.jsx)(n.code,{children:"jest.globalEnv"})," with the name of the library. The following example shows how\nto mock ",(0,o.jsx)(n.code,{children:"math.random()"})," to return a predictable number."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="diceRoll.lua"',children:'return function()\n\treturn "You rolled a " .. math.random(1, 6)\nend\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",metastring:'title="__tests__/diceRoll.spec.lua"',children:'local jest = JestGlobals.jest\n\ntest(\'correctly formats returned message\', function()\n\tlocal diceRoll = require(Workspace.diceRoll)\n\n\tlocal mockRandom = jest.spyOn(jest.globalEnv.math, "random")\n\tmockRandom.mockImplementationOnce(function(_min: number?, _max: number?)\n\t\treturn 5\n\tend)\n\n\texpect(diceRoll()).toBe("You rolled a 5")\nend)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"use-original-implementation",children:"Use Original Implementation"}),"\n",(0,o.jsxs)(n.p,{children:["You can use the original (non-mocked) variant of the global function at any\ntime. Original implementations are available by indexing into ",(0,o.jsx)(n.code,{children:"globalEnv"})," with\nthe name of the function you need access to."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'local mockRandom = jest.spyOn(jest.globalEnv.math, "random")\nmockRandom.mockImplementation(function(_min: number?, _max: number?)\n\treturn 5\nend)\n\n-- will always be 5\nlocal mocked = math.random()\n-- will be some random number between 0 and 1\nlocal unmocked = jest.globalEnv.math.random()\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var o=t(6540);const i={},l=o.createContext(i);function a(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);